name: Build Flutter APK

on:
  workflow_call:
    
permissions:
  contents: write

jobs:
  build:
    name: Build APK - Docker Compose
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: ./docker
        run: |
          echo "Building Docker image..."
          docker compose build client_mobile

      - name: Run Docker Compose
        working-directory: ./docker
        run: |
          echo "Starting build with Docker Compose..."
          docker compose up --abort-on-container-exit --build client_mobile

      - name: Check generated APK
        run: |
          echo "Verifying if APK was created..."
          APK_PATH="mobile_apk/client.apk"
          if [ ! -f "$APK_PATH" ]; then
            echo "APK not found at $APK_PATH"
            echo "Listing output directories for debugging:"
            ls -R docker || true
            exit 1
          fi
          echo "APK found successfully at $APK_PATH"
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Area-APK
          path: mobile_apk/client.apk
  
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: Area-APK
        path: ./apk
        
    - name: Debug - Check downloaded files
      run: |
        echo "ðŸ“‚ Current directory:"
        pwd
        echo "ðŸ“„ Files in release folder:"
        ls -R ./apk
          
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Area ${{ github.ref_name }}
        body: "APK Flutter gÃ©nÃ©rÃ©."
        files: |
          apk/client.apk
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
